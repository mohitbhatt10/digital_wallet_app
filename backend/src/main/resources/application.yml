spring.config.import: optional:file:.env[.properties]

spring:
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/wallet
    driverClassName: org.postgresql.Driver
    username: appuser
    password: StrongP@ssw0rd 
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      data-locations: classpath:categories.sql
  h2:
    console:
      enabled: false
  security:
    oauth2:
      client:
        registration:
          google:
            # NOTE: These credentials are sensitive. Prefer setting via environment variables:
            # SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID
            # SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET
            client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            user-name-attribute: sub

server:
  port: 8080
jwt:
  # Provide via environment variable JWT_SECRET in non-dev environments
  secret: ${JWT_SECRET}
  expirationMillis: 3600000
app:
  cors:
    allowed-origins: http://localhost:5173
